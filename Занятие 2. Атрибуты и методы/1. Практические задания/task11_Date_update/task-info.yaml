type: output
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 520
        length: 55
        placeholder_text: "...  # TODO Реализовать метод проверки високосного года"
        initial_state:
          length: 55
          offset: 520
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
                      return True
                  return False
        selected: false
        status: Solved
      - offset: 910
        length: 168
        placeholder_text: "...  # TODO используя атрибут класса DAY_OF_MONTH вернуть к\
      оличество дней в запрашиваемом месяце и году (учтите, что от високосного год\
      а меняется строка в DAY_OF_MONTH)"
        initial_state:
          length: 168
          offset: 725
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if self.is_leap_year(year):
                      return self.DAY_OF_MONTH[1][month - 1]
                  return self.DAY_OF_MONTH[0][month - 1]
        selected: true
        status: Solved
      - offset: 1366
        length: 105
        placeholder_text: "...  # TODO Проверить валидность даты, если дата невалидная\
      \ вызвать ValueError, если валидная, то вернуть True"
        initial_state:
          length: 110
          offset: 1026
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          if not 0 < day < self.get_max_day(month, year) + 1:
                      raise ValueError("Неверное значение дня")
                  if not 0 < month < 13:
                      raise ValueError("Неверное значение месяца")
                  return True
        selected: true
        status: Solved
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/output.txt
    visible: false
    learner_created: false
  - name: tests/input.txt
    visible: false
    learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 31 Jan 2025 12:26:37 UTC"
record: -1
